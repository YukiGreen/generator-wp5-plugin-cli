var fs = require('fs');
var render = require('json-templater/string');
var path = require('path');
var OUTPUT_PATH_DOCS = path.join(__dirname, '../../docs/main.ts');
var OUTPUT_PATH_EXAMPLES = path.join(__dirname, '../../examples/main.ts');
var MAIN_TEMPLATE_DOCS = `/* Automatically generated by './build/bin/build-init.js' */
// (runtime-only or standalone) has been set in webpack.base.conf with an alias.
// import 'plugin/assets/font/iconfont/iconfont.css';
// import 'plugin/assets/font/iconfont/iconfont.js';
import Vue from 'vue';
// @ts-ignore
import App from './App.vue';
import router from './route.config.js';
import Element from 'element-ui';
import 'element-ui/lib/theme-chalk/index.css';
import store from './store/index';
import i18n from './i18ns/index';
// 用于markdown展示
// @ts-ignore
import { hasPermission } from '../src/utils/permissionMapping/permissionMapping';
import demoBlock from './layout/components/demo-block.vue';
import hljs from 'highlight.js';
import <%= name.replace(/-(\w)/g, ($0, $1) => $1.toUpperCase()).replace(/^\S/, s => s.toUpperCase()) %>, { <%= name.replace(/-(\w)/g, function ($0, $1) {return $1.toUpperCase();}) %>Store, <%= name.replace(/-(\w)/g, function ($0, $1) {return $1.toUpperCase();}) %>Lang } from '../src/index.js';

// VUE配置参数
Vue.config.devtools = true;
Vue.config.productionTip = false; // 生产环境关掉提示
Vue.config.silent = true;

// 插件使用
Vue.use(Element, {
  size: 'medium', // set element-ui default size
  i18n: (key, value) => i18n.t(key, value)
});

Vue.use(<%= name.replace(/-(\w)/g, ($0, $1) => $1.toUpperCase()).replace(/^\S/, s => s.toUpperCase()) %>, {
  i18n: (key, value) => i18n.t(key, value)
});
i18n.mergeLocaleMessage('zh', <%= name.replace(/-(\w)/g, function ($0, $1) {return $1.toUpperCase();}) %>Lang["zh-CN"]);
i18n.mergeLocaleMessage('en', <%= name.replace(/-(\w)/g, function ($0, $1) {return $1.toUpperCase();}) %>Lang.en);
store.registerModule('<%= name.replace(/-(\w)/g, function ($0, $1) {return $1.toUpperCase();}) %>Store', <%= name.replace(/-(\w)/g, function ($0, $1) {return $1.toUpperCase();}) %>Store);

// 组件
Vue.component('demo-block', demoBlock);
router.afterEach(route => {
  Vue.nextTick(() => {
    const blocks = document.querySelectorAll('pre code');
    Array.prototype.forEach.call(blocks, hljs.highlightBlock);
  });
});

Vue.prototype.$hasPermission = hasPermission;
const loadingEle = document.getElementById('_loading');
loadingEle && (loadingEle.style.display = 'none');

/* eslint-disable no-new */
new Vue({
  el: '#app',
  router,
  store,
  i18n,
  components: { App },
  template: '<App/>'
});
`;
var MAIN_TEMPLATE_EXAMPLES = `/* Automatically generated by './build/bin/build-init.js' */
// import 'plugin/assets/font/iconfont/iconfont.css';
// import 'plugin/assets/font/iconfont/iconfont.js';
import Vue from 'vue';
import App from './App.vue';
import router from './route.config';
import store from './store';
import Element from 'element-ui';
import 'element-ui/lib/theme-chalk/index.css';
import i18n from './i18ns/index';
import { hasPermission } from '../src/utils/permissionMapping/permissionMapping';
import <%= name.replace(/-(\w)/g, ($0, $1) => $1.toUpperCase()).replace(/^\S/, s => s.toUpperCase()) %>, { <%= name.replace(/-(\w)/g, function ($0, $1) {return $1.toUpperCase();}) %>Store, <%= name.replace(/-(\w)/g, function ($0, $1) {return $1.toUpperCase();}) %>Lang } from '../src/index';

Vue.config.devtools = true;
Vue.config.productionTip = false; // 生产环境关掉提示
Vue.config.silent = true;
Vue.use(Element, {
  size: 'medium', // set element-ui default size
  i18n: (key, value) => i18n.t(key, value)
});

Vue.use(<%= name.replace(/-(\w)/g, ($0, $1) => $1.toUpperCase()).replace(/^\S/, s => s.toUpperCase()) %>, {
  i18n: (key, value) => i18n.t(key, value)
});
i18n.mergeLocaleMessage('zh', <%= name.replace(/-(\w)/g, function ($0, $1) {return $1.toUpperCase();}) %>Lang["zh-CN"]);
i18n.mergeLocaleMessage('en', <%= name.replace(/-(\w)/g, function ($0, $1) {return $1.toUpperCase();}) %>Lang.en);
store.registerModule('<%= name.replace(/-(\w)/g, function ($0, $1) {return $1.toUpperCase();}) %>Store', <%= name.replace(/-(\w)/g, function ($0, $1) {return $1.toUpperCase();}) %>Store);

Vue.prototype.$hasPermission = hasPermission;
const loadingEle = document.getElementById('_loading');
loadingEle && (loadingEle.style.display = 'none');

new Vue({
  router,
  store,
  i18n,
  render: (h) => h(App),
}).$mount('#app');
`;
var MAIN_TEMPLATE_EXPOSE = `{
  "./<%= name.replace(/-(\w)/g, ($0, $1) => $1.toUpperCase()).replace(/^\S/, s => s.toUpperCase()) %>": "./src/index.js",
  "./<%= name.replace(/-(\w)/g, function ($0, $1) {return $1.toUpperCase();}) %>Store": "./src/store/modules/edspPlugin/index.ts",
  "./<%= name.replace(/-(\w)/g, function ($0, $1) {return $1.toUpperCase();}) %>Lang": "./src/i18ns/index.js",
  "./edspHelloModule": "./packages/edspHelloModule/src/index.vue"
}`;
var templateDocs = render(MAIN_TEMPLATE_DOCS, {});
var templateExamples = render(MAIN_TEMPLATE_EXAMPLES, {});
var templateExpose = render(MAIN_TEMPLATE_EXPOSE, {});

fs.writeFileSync(OUTPUT_PATH_DOCS, templateDocs);
fs.writeFileSync(OUTPUT_PATH_EXAMPLES, templateExamples);
console.log('[build init] DONE');