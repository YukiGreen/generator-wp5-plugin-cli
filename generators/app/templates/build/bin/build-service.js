var Components = require('../../components.json');
var fs = require('fs');
var render = require('json-templater/string');
var path = require('path');
var endOfLine = require('os').EOL;
const uppercamelcase = require('uppercamelcase');
var OUTPUT_PATH = path.join(__dirname, '../../src/services/index.ts');
var IMPORT_TEMPLATE = 'export { default as {{packageUpper}}Service } from \'./{{package}}\';'; 
var MAIN_TEMPLATE = `/* Automatically generated by './build/bin/build-service.js' */
{{include}}
`;

delete Components.font;
function fileExists(filePath) {
  try {
    return fs.statSync(filePath).isFile();
  } catch (err) {
    return false;
  }
}
var ComponentNames = Object.keys(Components);

var includeComponentTemplate = [];

ComponentNames.forEach(name => {
  var filePath = path.resolve(__dirname, "../../src/services/" + name + "/index.ts");
  if (fileExists(filePath)) { 
    includeComponentTemplate.push(render(IMPORT_TEMPLATE, {
      packageUpper: uppercamelcase(name),
      package: name
    }));
  }
});

var template = render(MAIN_TEMPLATE, {
  include: includeComponentTemplate.join(endOfLine),
});

fs.writeFileSync(OUTPUT_PATH, template);